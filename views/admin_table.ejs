<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Data Management Table</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
  <style>
    body { background: #f8fafc; }
    .main-card { max-width: 1200px; margin: 36px auto; background: #fff; border-radius: 12px; box-shadow: 0 2px 18px #e7e7ea; padding: 32px 30px 30px 30px;}
    .table thead th { background: #f3f6fa; font-weight: bold; }
    .table-striped>tbody>tr:nth-of-type(odd) { background: #f9fbfd; }
    .table-scroll { overflow-x: auto; }
    .action-btns { margin-bottom: 16px;}
    .col-toggle label { margin-right: 16px; font-weight: normal;}
    .search-bar { width:200px; margin-left:auto; }
    .modal-backdrop {background:rgba(0,0,0,0.14);}
    .modal-content {border-radius:10px;}
    .btn-xs { padding:2px 9px; font-size:0.92rem;}
  </style>
</head>
<body>
  <div class="container main-card">
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h3 class="fw-bold mb-0">Data Management Table</h3>
      <div>
        <a href="/admin/assign" class="btn btn-outline-info btn-sm me-2">Assign X Matrix</a>
        <a href="/admin/chart" class="btn btn-outline-success btn-sm me-2">Go to Data Visualization</a>
        <a href="/admin/logout" class="btn btn-outline-danger btn-sm">Logout</a>
      </div>
    </div>
    <!-- Action Buttons -->
    <div class="action-btns d-flex align-items-center flex-wrap gap-2 mb-3">
      <button class="btn btn-primary btn-sm" onclick="showAddForm('theme')">Add Theme</button>
      <button class="btn btn-primary btn-sm" onclick="showAddForm('subtheme')">Add Subtheme</button>
      <button class="btn btn-primary btn-sm" onclick="showAddForm('category')">Add Category</button>
      <button class="btn btn-primary btn-sm" onclick="showAddForm('name')">Add Name</button>
      <!-- Column toggles -->
      <div class="form-check col-toggle ms-3">
        <input class="form-check-input" type="checkbox" data-col="0" id="colName" checked>
        <label class="form-check-label" for="colName">Name</label>
      </div>
      <div class="form-check col-toggle">
        <input class="form-check-input" type="checkbox" data-col="1" id="colTheme" checked>
        <label class="form-check-label" for="colTheme">Theme</label>
      </div>
      <div class="form-check col-toggle">
        <input class="form-check-input" type="checkbox" data-col="2" id="colSubtheme" checked>
        <label class="form-check-label" for="colSubtheme">Subtheme</label>
      </div>
      <div class="form-check col-toggle">
        <input class="form-check-input" type="checkbox" data-col="3" id="colCategory" checked>
        <label class="form-check-label" for="colCategory">Category</label>
      </div>
      <input type="text" id="searchInput" class="form-control form-control-sm search-bar ms-3" placeholder="Search...">
    </div>
    <!-- Data Table -->
    <div class="table-scroll">
      <table class="table table-bordered table-striped align-middle" id="dataTable">
        <thead>
          <tr>
            <th>Name</th>
            <th>Theme</th>
            <th>Subtheme</th>
            <th>Category</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
        <% data.forEach(function(row){ %>
            <tr>
                <td><%= row.name_text %></td>
                <td><%= row.theme %></td>
                <td><%= row.subtheme %></td>
                <td><%= row.category %></td>
                <td>
                  <% if (!row.theme && !row.subtheme && !row.category) { %>
                    <button class="btn btn-danger btn-xs"
                      onclick="deleteName('<%= row.name_text %>')">Delete</button>
                  <% } else { %>
                    <button class="btn btn-danger btn-xs"
                      onclick="deleteRow('<%= row.name_text %>', '<%= row.theme %>', '<%= row.subtheme %>', '<%= row.category %>')">Delete</button>
                  <% } %>
                </td>
            </tr>
        <% }) %>
        </tbody>
      </table>
    </div>
    <!-- Add Form Modal -->
    <div class="modal" tabindex="-1" id="addFormModal">
      <div class="modal-dialog">
        <div class="modal-content p-3">
          <h4 id="addFormTitle" class="mb-3">Add</h4>
          <form id="addForm" onsubmit="return submitAddForm()">
            <div id="addFormFields"></div>
            <div class="mt-3">
              <button type="submit" class="btn btn-primary btn-xs me-2">Save</button>
              <button type="button" class="btn btn-secondary btn-xs" onclick="closeAddForm()">Cancel</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
<script>
  // Bootstrap modal helpers
  function showAddForm(type) {
    document.getElementById('addFormModal').style.display = 'block';
    document.getElementById('addFormTitle').innerText = 'Add ' + type.charAt(0).toUpperCase() + type.slice(1);
    var fieldsHtml = '';
    if (type === 'theme') {
      fieldsHtml += '<label>Theme Name:<input name="theme" class="form-control" required></label>';
    }
    if (type === 'subtheme') {
      fieldsHtml += '<label>Subtheme Name:<input name="subtheme" class="form-control" required></label>';
      fieldsHtml += '<label>Theme (parent):<input name="theme" class="form-control" required></label>';
    }
    if (type === 'category') {
      fieldsHtml += '<label>Category Name:<input name="category" class="form-control" required></label>';
      fieldsHtml += '<label>Subtheme (parent):<input name="subtheme" class="form-control" required></label>';
    }
    if (type === 'name') {
      fieldsHtml += '<label>Name:<input name="name" class="form-control" required></label>';
    }
    document.getElementById('addFormFields').innerHTML = fieldsHtml;
    document.getElementById('addForm').dataset.type = type;
    document.getElementById('addFormModal').classList.add('show');
    document.getElementById('addFormModal').style.display = 'block';
  }
  function closeAddForm() {
    document.getElementById('addFormModal').classList.remove('show');
    document.getElementById('addFormModal').style.display = 'none';
  }
  function submitAddForm() {
    var type = document.getElementById('addForm').dataset.type;
    var form = document.getElementById('addForm');
    var formData = {};
    Array.from(form.elements).forEach(function(el) {
      if (el.name) formData[el.name] = el.value;
    });
    fetch('/admin/add', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ type: type, data: formData })
    }).then(resp => resp.json())
      .then(json => {
        if (json.success) location.reload();
        else alert(json.message || 'Failed');
      });
    return false;
  }
  // Column toggle logic
  document.querySelectorAll('.col-toggle input').forEach(function(checkbox) {
    checkbox.addEventListener('change', function() {
      var col = parseInt(this.dataset.col);
      var display = this.checked ? '' : 'none';
      document.querySelectorAll('#dataTable thead th')[col].style.display = display;
      document.querySelectorAll('#dataTable tbody tr').forEach(function(row) {
        if(row.children[col]) row.children[col].style.display = display;
      });
    });
  });
  // Search bar filtering
  document.getElementById('searchInput').addEventListener('input', function() {
    var value = this.value.toLowerCase();
    var rows = document.querySelectorAll('#dataTable tbody tr');
    rows.forEach(function(row) {
      var text = row.innerText.toLowerCase();
      row.style.display = (text.indexOf(value) > -1) ? '' : 'none';
    });
  });

  // ----------- Delete Functions -----------
  function deleteRow(name, theme, subtheme, category) {
    if (!confirm('Delete this record (name-category relation)?')) return;
    fetch('/admin/delete', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ name, theme, subtheme, category })
    }).then(resp => resp.json())
      .then(json => {
        if (json.success) location.reload();
        else alert(json.message || 'Delete failed!');
      });
  }

  function deleteName(name) {
    if (!confirm('Delete this name (all records)?')) return;
    fetch('/admin/delete-name', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ name })
    }).then(resp => resp.json())
      .then(json => {
        if (json.success) location.reload();
        else alert(json.message || 'Delete failed!');
      });
  }
</script>
</body>
</html>
