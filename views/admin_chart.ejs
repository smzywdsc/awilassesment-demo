<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Data Visualization</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
  <style>
    body { background: #f8fafc; }
    .main-card {
      max-width: 1250px;
      margin: 40px auto 0 auto;
      background: #fff;
      border-radius: 16px;
      box-shadow: 0 2px 24px #e7e7ea;
      padding: 28px 40px 38px 40px;
    }
    .top-bar {
      display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;
    }
    .chart-row { display: flex; gap: 32px; flex-wrap: wrap; margin-top: 16px;}
    .chart-box {
      background: #fcfdff;
      border-radius: 14px;
      box-shadow: 0 1px 8px #ececf3;
      padding: 30px 24px 14px 24px;
      width: 600px;
      min-width: 350px;
      min-height: 420px;
      flex: 1 1 550px;
    }
    @media (max-width: 1300px) {
      .main-card { padding: 16px 8px; }
      .chart-row { flex-direction: column; gap: 24px;}
      .chart-box { width: 100%; min-width: 0;}
    }
  </style>
</head>
<body>
  <div class="main-card">
    <div class="top-bar">
      <h3 class="fw-bold mb-0">Data Visualization</h3>
      <div>
        <a href="/admin/table" class="btn btn-outline-secondary btn-sm me-2">Back to Data Table</a>
        <a href="/admin/logout" class="btn btn-outline-danger btn-sm">Logout</a>
      </div>
    </div>
    <hr>
    <div class="chart-row">
      <div class="chart-box">
        <canvas id="barChart" height="350"></canvas>
      </div>
      <div class="chart-box">
        <canvas id="pieChart" height="350"></canvas>
      </div>
    </div>
  </div>
  <script>
    // ---- Process backend data ----
    const raw = <%- JSON.stringify(chartData) %>;
    // Compose x-axis labels and count array
    const labels = raw.map(r => `${r.theme}/${r.subtheme}/${r.category}`);
    const counts = raw.map(r => r.count);

    // --- Highlight Top N (e.g. 10) ---
    const N = 10;
    // Get the indexes of top N by count
    const sortedIdx = counts
      .map((v, idx) => [v, idx])
      .sort((a, b) => b[0] - a[0])
      .slice(0, N)
      .map(x => x[1]);
    // Bar color: highlight top N, others gray
    function genBarColors(len) {
      const highlight = 'rgba(91,143,249,0.9)';
      const gray = 'rgba(200,200,200,0.28)';
      return Array.from({length: len}, (_,i) => sortedIdx.includes(i) ? highlight : gray);
    }

    // ---- Bar Chart: Names Count per Category ----
    const barChart = new Chart(document.getElementById('barChart').getContext('2d'), {
      type: 'bar',
      data: {
        labels: labels,
        datasets: [{
          label: 'Names Count per Category',
          data: counts,
          backgroundColor: genBarColors(labels.length),
          borderRadius: 7,
          maxBarThickness: 36,
        }]
      },
      options: {
        plugins: {
          title: { display: true, text: 'Number of Names per Category', font: { size: 19 } },
          legend: { display: false },
          tooltip: {
            callbacks: {
              title: (items) => items[0].label.length > 50 ? items[0].label.slice(0,50)+'...' : items[0].label
            }
          }
        },
        layout: { padding: 10 },
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          x: {
            ticks: {
              autoSkip: false,
              maxRotation: 80,
              minRotation: 70,
              font: { size: 12 },
              color: '#333',
              callback: function(value, index) {
                // Only show label if it's a top N, else empty for less crowded axis
                if (sortedIdx.includes(index)) return this.getLabelForValue(value);
                // Show every 10th label faintly, others blank
                return (index % 10 === 0) ? '.' : '';
              }
            },
            grid: { display: false }
          },
          y: {
            beginAtZero: true,
            font: { size: 13 },
            color: '#334',
            grid: { color: "#f0f0f0" }
          }
        },
        animation: {
          onComplete: () => {
            // "Scroll" effect: move to show top N if many bars
            const chart = barChart;
            if (chart.scales.x.width > 950) {
              const barWidth = chart.scales.x.width / chart.data.labels.length;
              const scrollTo = Math.max(0, sortedIdx[0] * barWidth - 150);
              chart.canvas.parentNode.scrollLeft = scrollTo;
            }
          }
        }
      }
    });

    // ---- Pie Chart: Top 10 Categories ----
    // Pick top 10 categories by count
    const sorted = raw.slice().sort((a, b) => b.count - a.count).slice(0, N);
    const pieLabels = sorted.map(r => `${r.theme}/${r.subtheme}/${r.category}`);
    const pieCounts = sorted.map(r => r.count);
    const pieColors = [
      '#5B8FF9', '#61DDAA', '#65789B', '#F6BD16', '#7262fd',
      '#78D3F8', '#9661BC', '#F6903D', '#008685', '#F08BB4'
    ];

    new Chart(document.getElementById('pieChart').getContext('2d'), {
      type: 'pie',
      data: {
        labels: pieLabels,
        datasets: [{
          label: 'Top 10 Categories',
          data: pieCounts,
          backgroundColor: pieColors,
          borderWidth: 2,
          borderColor: "#fff"
        }]
      },
      options: {
        plugins: {
          title: { display: true, text: 'Top 10 Categories by Name Count', font: { size: 18 } },
          legend: { position: 'right', labels: { font: { size: 14 } } }
        }
      }
    });
  </script>
</body>
</html>
